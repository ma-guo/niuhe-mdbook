package protos

// Generated by niuhe.idl
// 此文件由 niuhe.idl 自动生成, 请勿手动修改

// 本请求不需要参数
type NoneReq struct {
}

// 返回数据为空
type NoneRsp struct {
}

// 选项数值
type LongOptionItem struct {
	Value int64  `json:"value" zpf_name:"value" zpf_reqd:"true"` //	选项ID
	Label string `json:"label" zpf_name:"label" zpf_reqd:"true"` //	选项名称
}

// 选项数值
type StringOptionItem struct {
	Value string `json:"value" zpf_name:"value" zpf_reqd:"true"` //	选项ID
	Label string `json:"label" zpf_name:"label" zpf_reqd:"true"` //	选项名称
}

type LongOptions struct {
	Value    int64          `json:"value" zpf_name:"value" zpf_reqd:"true"` //	选项ID
	Label    string         `json:"label" zpf_name:"label" zpf_reqd:"true"` //	选项名称
	Children []*LongOptions `json:"children" zpf_name:"children"`           //	子选项
}

type StringOptions struct {
	Value    string           `json:"value" zpf_name:"value" zpf_reqd:"true"` //	选项ID
	Label    string           `json:"label" zpf_name:"label" zpf_reqd:"true"` //	选项名称
	Children []*StringOptions `json:"children" zpf_name:"children"`           //	子选项
}

type V1DictTypesItem struct {
	Id     int64  `json:"id" zpf_name:"id"`         //	主键
	Name   string `json:"name" zpf_name:"name"`     //	类型名称
	Code   string `json:"code" zpf_name:"code"`     //	类型编码
	Remark string `json:"remark" zpf_name:"remark"` //	备注
	Status int    `json:"status" zpf_name:"status"` //	状态 取值范围及含义: 1 - 启用; 0 - 停用;
}

// 菜单视图对象
type V1MenuTiny struct {
	Id   int64  `json:"id" zpf_name:"id" zpf_reqd:"true"`     //	菜单ID
	Name string `json:"name" zpf_name:"name" zpf_reqd:"true"` //	菜单名称
	Perm string `json:"perm" zpf_name:"perm"`                 //	按钮权限标识
}

// 登录请求参数
type AuthLoginReq struct {
	Username    string `json:"username" zpf_name:"username" zpf_reqd:"true"`       //	用户名
	Password    string `json:"password" zpf_name:"password" zpf_reqd:"true"`       //	密码
	CaptchaKey  string `json:"captchaKey" zpf_name:"captchaKey" zpf_reqd:"true"`   //	验证码key
	CaptchaCode string `json:"captchaCode" zpf_name:"captchaCode" zpf_reqd:"true"` //	验证码
}

// 登录返回参数
type AauthLoginRsp struct {
	AccessToken  string `json:"accessToken" zpf_name:"accessToken" zpf_reqd:"true"`   //	访问token
	TokenType    string `json:"tokenType" zpf_name:"tokenType" zpf_reqd:"true"`       //	token 类型, 固定为 Bearer
	RefreshToken string `json:"refreshToken" zpf_name:"refreshToken" zpf_reqd:"true"` //	刷新token
	ExpiresIn    int64  `json:"expiresIn" zpf_name:"expiresIn" zpf_reqd:"true"`       //	token 过期时间, 单位毫秒
}

// 验证码返回参数
type AuthCaptchaRsp struct {
	CaptchaKey    string `json:"captchaKey" zpf_name:"captchaKey" zpf_reqd:"true"`       //	验证码key
	CaptchaBase64 string `json:"captchaBase64" zpf_name:"captchaBase64" zpf_reqd:"true"` //	验证码, base64字符串。[data:image/png;base64,] 开头
	Width         int    `json:"width" zpf_name:"width" zpf_reqd:"true"`                 //	图片宽度
	Height        int    `json:"height" zpf_name:"height" zpf_reqd:"true"`               //	图片高度
}

// 获取当前登录用户信息返回参数
type V1UsersMeRsp struct {
	UserId   int64    `json:"userId" zpf_name:"userId" zpf_reqd:"true"`     //	用户ID
	Username string   `json:"username" zpf_name:"username" zpf_reqd:"true"` //	用户名
	Nickname string   `json:"nickname" zpf_name:"nickname" zpf_reqd:"true"` //	用户昵称
	Avatar   string   `json:"avatar" zpf_name:"avatar" zpf_reqd:"true"`     //	头像地址
	Roles    []string `json:"roles" zpf_name:"roles"`                       //	用户角色编码集合
	Perms    []string `json:"perms" zpf_name:"perms"`                       //	用户权限标识集合
}

// 用户分页列表项数据结构
type V1UserPageItem struct {
	Id          int64  `json:"id" zpf_name:"id" zpf_reqd:"true"`                   //	用户ID
	Username    string `json:"username" zpf_name:"username" zpf_reqd:"true"`       //	用户名
	Nickname    string `json:"nickname" zpf_name:"nickname" zpf_reqd:"true"`       //	用户昵称
	Mobile      string `json:"mobile" zpf_name:"mobile" zpf_reqd:"true"`           //	手机号
	GenderLabel string `json:"genderLabel" zpf_name:"genderLabel" zpf_reqd:"true"` //	性别
	Avatar      string `json:"avatar" zpf_name:"avatar" zpf_reqd:"true"`           //	头像地址
	Email       string `json:"email" zpf_name:"email" zpf_reqd:"true"`             //	用户邮箱
	Status      int    `json:"status" zpf_name:"status" zpf_reqd:"true"`           //	用户状态 取值范围及含义: 1 - 启用; 0 - 停用;
	DeptName    string `json:"deptName" zpf_name:"deptName" zpf_reqd:"true"`       //	部门名称
	RoleNames   string `json:"roleNames" zpf_name:"roleNames" zpf_reqd:"true"`     //	角色名称
	CreateTime  string `json:"createTime" zpf_name:"createTime" zpf_reqd:"true"`   //	创建时间
}

type V1UsersPageReq struct {
	Keywords  string `json:"keywords" zpf_name:"keywords"`   //	关键字
	Status    int    `json:"status" zpf_name:"status"`       //	用户状态
	DeptId    int64  `json:"deptId" zpf_name:"deptId"`       //	部门ID
	PageNum   int    `json:"pageNum" zpf_name:"pageNum"`     //	页码
	PageSize  int    `json:"pageSize" zpf_name:"pageSize"`   //	每页条数
	StartTime string `json:"startTime" zpf_name:"startTime"` //	开始时间-年月日
	EndTime   string `json:"endTime" zpf_name:"endTime"`     //	结束时间-年月日
}

// 用户分页列表返回参数
type V1UsersPageRsp struct {
	Total int64             `json:"total" zpf_name:"total" zpf_reqd:"true"` //	总数
	List  []*V1UserPageItem `json:"list" zpf_name:"list"`                   //	用户列表
}

// 新增用户请求参数
type V1UsersAddReq struct {
	Id       int64   `json:"id" zpf_name:"id"`                             //	用户ID
	Username string  `json:"username" zpf_name:"username" zpf_reqd:"true"` //	用户名
	Nickname string  `json:"nickname" zpf_name:"nickname" zpf_reqd:"true"` //	用户昵称
	Password string  `json:"password" zpf_name:"password"`                 //	密码
	Mobile   string  `json:"mobile" zpf_name:"mobile"`                     //	手机号
	Gender   int     `json:"gender" zpf_name:"gender"`                     //	性别 取值范围及含义: 0 - 未知; 1 - 男; 2 - 女;
	Avatar   string  `json:"avatar" zpf_name:"avatar"`                     //	头像地址
	Email    string  `json:"email" zpf_name:"email"`                       //	用户邮箱
	Status   int     `json:"status" zpf_name:"status"`                     //	用户状态 取值范围及含义: 1 - 启用; 0 - 停用;
	DeptId   int64   `json:"deptId" zpf_name:"deptId"`                     //	部门ID
	RoleIds  []int64 `json:"roleIds" zpf_name:"roleIds"`                   //	角色ID集合
}

// 用户表单请求参数
type V1UserFormReq struct {
	UserId int64 `json:"userId" zpf_name:"userId" zpf_reqd:"true"` //	用户ID
}

// 用户表单返回参数
type V1UserFormRsp struct {
	Id       int64   `json:"id" zpf_name:"id" zpf_reqd:"true"`             //	用户ID
	Username string  `json:"username" zpf_name:"username" zpf_reqd:"true"` //	用户名
	Nickname string  `json:"nickname" zpf_name:"nickname" zpf_reqd:"true"` //	用户昵称
	Mobile   string  `json:"mobile" zpf_name:"mobile" zpf_reqd:"true"`     //	手机号
	Gender   int     `json:"gender" zpf_name:"gender"`                     //	性别 取值范围及含义: 0 - 未知; 1 - 男; 2 - 女;
	Avatar   string  `json:"avatar" zpf_name:"avatar" zpf_reqd:"true"`     //	头像地址
	Email    string  `json:"email" zpf_name:"email" zpf_reqd:"true"`       //	用户邮箱
	Status   int     `json:"status" zpf_name:"status" zpf_reqd:"true"`     //	用户状态 取值范围及含义: 1 - 启用; 0 - 停用;
	DeptId   int64   `json:"deptId" zpf_name:"deptId" zpf_reqd:"true"`     //	部门ID
	RoleIds  []int64 `json:"roleIds" zpf_name:"roleIds"`                   //	角色ID集合
}

// 修改用户信息参数
type V1UserUpdateReq struct {
	Id       int64   `json:"id" zpf_name:"id" zpf_reqd:"true"`             //	用户ID
	Username string  `json:"username" zpf_name:"username" zpf_reqd:"true"` //	用户名
	Nickname string  `json:"nickname" zpf_name:"nickname" zpf_reqd:"true"` //	用户昵称
	Mobile   string  `json:"mobile" zpf_name:"mobile" zpf_reqd:"true"`     //	手机号
	Gender   int     `json:"gender" zpf_name:"gender" zpf_reqd:"true"`     //	用户状态 取值范围及含义: 0 - 未知; 1 - 男; 2 - 女;
	Avatar   string  `json:"avatar" zpf_name:"avatar"`                     //	头像地址
	Email    string  `json:"email" zpf_name:"email"`                       //	用户邮箱
	Status   int     `json:"status" zpf_name:"status" zpf_reqd:"true"`     //	用户状态 取值范围及含义: 1 - 启用; 0 - 停用;
	DeptId   int64   `json:"deptId" zpf_name:"deptId" zpf_reqd:"true"`     //	部门ID
	RoleIds  []int64 `json:"roleIds" zpf_name:"roleIds"`                   //	角色ID集合
}

// 删除用户请求参数
type V1UsersDeleteReq struct {
	Ids string `json:"ids" zpf_name:"ids" zpf_reqd:"true"` //	用户ID，多个以英文逗号(,)分割
}

// 修改密码请求参数
type V1UsersPasswordReq struct {
	UserId   int64  `json:"userId" zpf_name:"userId" zpf_reqd:"true"`     //	用户id
	Password string `json:"password" zpf_name:"password" zpf_reqd:"true"` //	新密码
}

// 修改用户状态请求参数
type V1UsersStatusReq struct {
	UserId int64 `json:"userId" zpf_name:"userId" zpf_reqd:"true"` //	用户ID
	Status int   `json:"status" zpf_name:"status" zpf_reqd:"true"` //	用户状态 取值范围及含义: 1 - 启用; 0 - 停用;
}

// 角色分页列表
type V1RolesPageReq struct {
	Keywords string `json:"keywords" zpf_name:"keywords"` //	搜索关键字
	PageNum  int    `json:"pageNum" zpf_name:"pageNum"`   //	页码
	PageSize int    `json:"pageSize" zpf_name:"pageSize"` //	每页数量
}

// 角色列表项
type V1RolesItem struct {
	Id         int64  `json:"id" zpf_name:"id" zpf_reqd:"true"`                 //	角色ID
	Name       string `json:"name" zpf_name:"name" zpf_reqd:"true"`             //	角色名称
	Code       string `json:"code" zpf_name:"code" zpf_reqd:"true"`             //	角色编码
	Status     int    `json:"status" zpf_name:"status" zpf_reqd:"true"`         //	角色状态 取值范围及含义: 1 - 启用; 0 - 停用;
	Sort       int    `json:"sort" zpf_name:"sort" zpf_reqd:"true"`             //	排序
	CreateTime string `json:"createTime" zpf_name:"createTime" zpf_reqd:"true"` //	创建时间
	UpdateTime string `json:"updateTime" zpf_name:"updateTime" zpf_reqd:"true"` //	更新时间
}

type V1RolesPageRsp struct {
	List  []*V1RolesItem `json:"list" zpf_name:"list"`                   //	数据项
	Total int64          `json:"total" zpf_name:"total" zpf_reqd:"true"` //	总数
}

type V1RolesOptiosRsp struct {
	Items []*LongOptionItem `json:"items" zpf_name:"items"` //	角色下拉列表项
}

// 角色新增
type V1RolesAddReq struct {
	Id        int64  `json:"id" zpf_name:"id"`                         //	角色ID
	Name      string `json:"name" zpf_name:"name" zpf_reqd:"true"`     //	角色名称
	Code      string `json:"code" zpf_name:"code" zpf_reqd:"true"`     //	角色编码
	Status    int    `json:"status" zpf_name:"status" zpf_reqd:"true"` //	角色状态 取值范围及含义: 1 - 启用; 0 - 停用;
	Sort      int    `json:"sort" zpf_name:"sort"`                     //	排序
	DataScope int    `json:"dataScope" zpf_name:"dataScope"`           //	数据权限 取值范围及含义: 0 - 所有数据; 1 - 部门及子部门数据; 2 - 本部门数据; 3 - 本人数据;
}

// 角色表单数据请求结构
type V1RolesFormReq struct {
	Id int64 `json:"id" zpf_name:"id" zpf_reqd:"true"` //	角色ID
}

// 角色表单数据
type V1RolesFormRsp struct {
	Id        int64  `json:"id" zpf_name:"id"`                         //	角色ID
	Name      string `json:"name" zpf_name:"name" zpf_reqd:"true"`     //	角色名称
	Code      string `json:"code" zpf_name:"code" zpf_reqd:"true"`     //	角色编码
	Status    int    `json:"status" zpf_name:"status" zpf_reqd:"true"` //	角色状态 取值范围及含义: 1 - 启用; 0 - 停用;
	Sort      int    `json:"sort" zpf_name:"sort"`                     //	排序
	DataScope int    `json:"dataScope" zpf_name:"dataScope"`           //	数据权限 取值范围及含义: 0 - 所有数据; 1 - 部门及子部门数据; 2 - 本部门数据; 3 - 本人数据;
}

// 角色表单数据
type V1RolesUpdateReq struct {
	Id        int64  `json:"id" zpf_name:"id" zpf_reqd:"true"`         //	角色ID
	Name      string `json:"name" zpf_name:"name" zpf_reqd:"true"`     //	角色名称
	Code      string `json:"code" zpf_name:"code" zpf_reqd:"true"`     //	角色编码
	Status    int    `json:"status" zpf_name:"status" zpf_reqd:"true"` //	角色状态 取值范围及含义: 1 - 启用; 0 - 停用;
	Sort      int    `json:"sort" zpf_name:"sort"`                     //	排序
	DataScope int    `json:"dataScope" zpf_name:"dataScope"`           //	数据权限 取值范围及含义: 0 - 所有数据; 1 - 部门及子部门数据; 2 - 本部门数据; 3 - 本人数据;
}

// 角色删除
type V1RolesDeleteReq struct {
	Ids string `json:"ids" zpf_name:"ids" zpf_reqd:"true"` //	删除角色，多个以英文逗号(,)分割
}

// 获取角色的菜单ID集合
type V1RolesMenuIdsReq struct {
	RoleId int64 `json:"roleId" zpf_name:"roleId" zpf_reqd:"true"` //	角色ID
}

// 获取角色的菜单ID集合
type V1RolesMenuIdsRsp struct {
	Items []int64 `json:"items" zpf_name:"items"` //	菜单ID集合
}

// 给角色分配权限
type V1RolesMenusReq struct {
	RoleId  int64   `json:"roleId" zpf_name:"roleId" zpf_reqd:"true"` //	角色ID
	MenuIds []int64 `json:"menuIds" zpf_name:"menuIds"`               //	菜单ID集合
}

// 修改角色状态
type V1RolesStatusReq struct {
	RoleId int64 `json:"roleId" zpf_name:"roleId" zpf_reqd:"true"` //	角色ID
	Status int   `json:"status" zpf_name:"status" zpf_reqd:"true"` //	角色状态 取值范围及含义: 1 - 启用; 0 - 停用;
}

// 菜单视图对象
type MenuItem struct {
	Id        int64       `json:"id" zpf_name:"id" zpf_reqd:"true"`     //	菜单ID
	ParentId  int64       `json:"parentId" zpf_name:"parentId"`         //	父菜单ID
	Name      string      `json:"name" zpf_name:"name" zpf_reqd:"true"` //	菜单名称
	Icon      string      `json:"icon" zpf_name:"icon"`                 //	ICON
	Path      string      `json:"path" zpf_name:"path"`                 //	路由相对路径
	RouteName string      `json:"routeName" zpf_name:"routeName"`       //	路由名称
	Component string      `json:"component" zpf_name:"component"`       //	组件路径
	Sort      int         `json:"sort" zpf_name:"sort"`                 //	菜单排序(数字越小排名越靠前)
	Visible   int         `json:"visible" zpf_name:"visible"`           //	是否可见 取值范围及含义: 1 - 显示; 0 - 隐藏;
	Redirect  string      `json:"redirect" zpf_name:"redirect"`         //	跳转路径
	Type      string      `json:"type" zpf_name:"type"`                 //	菜单类型 取值范围及含义: NULL - 无类型; CATALOG - 目录; MENU - 菜单; BUTTON - 按钮; EXTLINK - 外链;
	Perm      string      `json:"perm" zpf_name:"perm"`                 //	按钮权限标识
	Children  []*MenuItem `json:"children" zpf_name:"children"`         //	子菜单
}

// 菜单列表请求
type V1MenusListReq struct {
	Keywords string `json:"keywords" zpf_name:"keywords"` //	关键字
	Status   int    `json:"status" zpf_name:"status"`     //	状态 取值范围及含义: 1 - 显示; 0 - 隐藏;
	Type     int    `json:"type" zpf_name:"type"`         //	菜单类型, 忽略本参数 取值范围及含义: 1 - MENU; 2 - CATALOG; 3 - EXTLINK; 4 - BUTTON;
}

// 菜单列表响应
type V1MenusListRsp struct {
	Items []*MenuItem `json:"items" zpf_name:"items"` //	菜单列表
}

// 菜单删除请求
type V1MenusDeleteReq struct {
	Ids string `json:"ids" zpf_name:"ids" zpf_reqd:"true"` //	菜单ID
}

// 菜单表单对象
type V1MenusAddReq struct {
	Id         int64  `json:"id" zpf_name:"id"`                     //	菜单ID
	ParentId   int64  `json:"parentId" zpf_name:"parentId"`         //	父菜单ID
	Name       string `json:"name" zpf_name:"name" zpf_reqd:"true"` //	菜单名称
	Type       string `json:"type" zpf_name:"type"`                 //	菜单类型 取值范围及含义: NULL - 无类型; CATALOG - 目录; MENU - 菜单; BUTTON - 按钮; EXTLINK - 外链;
	Path       string `json:"path" zpf_name:"path"`                 //	路由路径
	Component  string `json:"component" zpf_name:"component"`       //	组件路径(vue页面完整路径，省略.vue后缀)
	Perm       string `json:"perm" zpf_name:"perm"`                 //	权限标识
	Visible    int    `json:"visible" zpf_name:"visible"`           //	显示状态 取值范围及含义: 1 - 显示; 0 - 隐藏;
	Sort       int    `json:"sort" zpf_name:"sort"`                 //	排序(数字越小排名越靠前)
	Icon       string `json:"icon" zpf_name:"icon"`                 //	菜单图标
	Redirect   string `json:"redirect" zpf_name:"redirect"`         //	跳转路径
	KeepAlive  int    `json:"keepAlive" zpf_name:"keepAlive"`       //	是否开启缓存
	AlwaysShow int    `json:"alwaysShow" zpf_name:"alwaysShow"`     //	是否总是显示
}

type MenuOptions struct {
	Value    int64          `json:"value" zpf_name:"value" zpf_reqd:"true"` //	菜单ID
	Label    string         `json:"label" zpf_name:"label" zpf_reqd:"true"` //	菜单名称
	Children []*MenuOptions `json:"children" zpf_name:"children"`           //	子菜单
}

// 菜单选项列表响应
type V1MenusOptionsRsp struct {
	Items []*MenuOptions `json:"items" zpf_name:"items"` //	菜单选项列表
}

type MenuRouteMeta struct {
	Title     string   `json:"title" zpf_name:"title" zpf_reqd:"true"` //	路由title
	Icon      string   `json:"icon" zpf_name:"icon"`                   //	路由icon
	Hiddle    bool     `json:"hiddle" zpf_name:"hiddle"`               //	是否隐藏
	Roles     []string `json:"roles" zpf_name:"roles"`                 //	拥有路由权限的角色编码
	KeepAlive bool     `json:"keepAlive" zpf_name:"keepAlive"`         //	是否开启缓存
}

// 路由属性类型
type MenuRouteItem struct {
	Path      string           `json:"path" zpf_name:"path" zpf_reqd:"true"`           //	路由路径
	Component string           `json:"component" zpf_name:"component" zpf_reqd:"true"` //	组件路径
	Name      string           `json:"name" zpf_name:"name" zpf_reqd:"true"`           //	路由名称
	Redirect  string           `json:"redirect" zpf_name:"redirect"`                   //	跳转链接
	Meta      *MenuRouteMeta   `json:"meta" zpf_name:"meta" zpf_reqd:"true"`           //	路由元信息
	Children  []*MenuRouteItem `json:"children" zpf_name:"children"`                   //	子路由
}

type MenuRouteRsp struct {
	Items []*MenuRouteItem `json:"items" zpf_name:"items"` //	路由列表
}

// 菜单表单请求
type V1MenusFormReq struct {
	Id int64 `json:"id" zpf_name:"id" zpf_reqd:"true"` //	菜单ID
}

// 菜单表单数据
type V1MenusFormRsp struct {
	Id         int64  `json:"id" zpf_name:"id"`                     //	菜单ID
	ParentId   int64  `json:"parentId" zpf_name:"parentId"`         //	父菜单ID
	Name       string `json:"name" zpf_name:"name" zpf_reqd:"true"` //	菜单名称
	Type       string `json:"type" zpf_name:"type"`                 //	菜单类型 取值范围及含义: NULL - 无类型; CATALOG - 目录; MENU - 菜单; BUTTON - 按钮; EXTLINK - 外链;
	Path       string `json:"path" zpf_name:"path"`                 //	路由路径
	Component  string `json:"component" zpf_name:"component"`       //	组件路径(vue页面完整路径，省略.vue后缀)
	Perm       string `json:"perm" zpf_name:"perm"`                 //	权限标识
	Visible    int    `json:"visible" zpf_name:"visible"`           //	显示状态 取值范围及含义: 1 - 显示; 0 - 隐藏;
	Sort       int    `json:"sort" zpf_name:"sort"`                 //	排序(数字越小排名越靠前)
	Icon       string `json:"icon" zpf_name:"icon"`                 //	菜单图标
	Redirect   string `json:"redirect" zpf_name:"redirect"`         //	跳转路径
	AlwaysShow int    `json:"alwaysShow" zpf_name:"alwaysShow"`     //	是否总是显示
	KeepAlive  int    `json:"keepAlive" zpf_name:"keepAlive"`       //	是否开启缓存
}

// 修改菜单请求参数
type V1MenusUpdateReq struct {
	Id         int64  `json:"id" zpf_name:"id" zpf_reqd:"true"`     //	菜单ID
	ParentId   int64  `json:"parentId" zpf_name:"parentId"`         //	父菜单ID
	Name       string `json:"name" zpf_name:"name" zpf_reqd:"true"` //	菜单名称
	Type       string `json:"type" zpf_name:"type"`                 //	菜单类型 取值范围及含义: NULL - 无类型; CATALOG - 目录; MENU - 菜单; BUTTON - 按钮; EXTLINK - 外链;
	Path       string `json:"path" zpf_name:"path"`                 //	路由路径
	Component  string `json:"component" zpf_name:"component"`       //	组件路径(vue页面完整路径，省略.vue后缀)
	Perm       string `json:"perm" zpf_name:"perm"`                 //	权限标识
	Visible    int    `json:"visible" zpf_name:"visible"`           //	显示状态 取值范围及含义: 1 - 显示; 0 - 隐藏;
	Sort       int    `json:"sort" zpf_name:"sort"`                 //	排序(数字越小排名越靠前)
	Icon       string `json:"icon" zpf_name:"icon"`                 //	菜单图标
	Redirect   string `json:"redirect" zpf_name:"redirect"`         //	跳转路径
	AlwaysShow int    `json:"alwaysShow" zpf_name:"alwaysShow"`     //	是否总是显示
	KeepAlive  int    `json:"keepAlive" zpf_name:"keepAlive"`       //	是否开启缓存
}

// 修改菜单状态请求参数
type V1MenusStatusReq struct {
	Id      int64 `json:"id" zpf_name:"id" zpf_reqd:"true"`           //	菜单ID
	Visible int   `json:"visible" zpf_name:"visible" zpf_reqd:"true"` //	菜单状态 取值范围及含义: 1 - 显示; 0 - 隐藏;
}

// 菜单列表请求
type V1MenusPageReq struct {
	Keywords string `json:"keywords" zpf_name:"keywords"` //	关键字
	Type     int    `json:"type" zpf_name:"type"`         //	菜单类型, 忽略本参数 取值范围及含义: 1 - MENU; 2 - CATALOG; 3 - EXTLINK; 4 - BUTTON;
	PageNum  int    `json:"pageNum" zpf_name:"pageNum"`   //	页码
	PageSize int    `json:"pageSize" zpf_name:"pageSize"` //	每页记录数
}

// 菜单列表响应
type V1MenusPageRsp struct {
	Items []*V1MenuTiny `json:"items" zpf_name:"items"`                 //	菜单列表
	Total int64         `json:"total" zpf_name:"total" zpf_reqd:"true"` //	总记录数
}

// 部门信息
type V1DeptItem struct {
	Id         int64         `json:"id" zpf_name:"id" zpf_reqd:"true"`     //	部门id
	ParentId   int64         `json:"parentId" zpf_name:"parentId"`         //	父部门id
	Name       string        `json:"name" zpf_name:"name" zpf_reqd:"true"` //	部门名称
	Sort       int           `json:"sort" zpf_name:"sort"`                 //	排序
	Status     int           `json:"status" zpf_name:"status"`             //	状态 取值范围及含义: 1 - 启用; 0 - 停用;
	CreateTime string        `json:"createTime" zpf_name:"createTime"`     //	创建时间
	UpdateTime string        `json:"updateTime" zpf_name:"updateTime"`     //	修改时间
	Children   []*V1DeptItem `json:"children" zpf_name:"children"`         //	子部门
}

// 部门列表请求
type V1DeptListReq struct {
	Keyword string `json:"keyword" zpf_name:"keyword"` //	搜索关键词
	Status  int    `json:"status" zpf_name:"status"`   //	状态 取值范围及含义: 1 - 启用; 0 - 停用;
}

// 部门列表响应
type V1DeptListRsp struct {
	Items []*V1DeptItem `json:"items" zpf_name:"items"` //	部门列表
}

// 部门添加请求参数
type V1DeptAddReq struct {
	Id       int64  `json:"id" zpf_name:"id"`                             //	部门id, 前端使用
	ParentId int64  `json:"parentId" zpf_name:"parentId" zpf_reqd:"true"` //	父部门id
	Name     string `json:"name" zpf_name:"name" zpf_reqd:"true"`         //	部门名称
	Sort     int    `json:"sort" zpf_name:"sort"`                         //	排序
	Status   int    `json:"status" zpf_name:"status"`                     //	状态 取值范围及含义: 1 - 启用; 0 - 停用;
}

// 部门下拉列表响应
type V1DeptOptionsRsp struct {
	Items []*LongOptions `json:"items" zpf_name:"items"` //	部门列表
}

// 修改部门请求参数
type V1DeptUpdateReq struct {
	Id       int64  `json:"id" zpf_name:"id" zpf_reqd:"true"`             //	部门id
	ParentId int64  `json:"parentId" zpf_name:"parentId" zpf_reqd:"true"` //	父部门id
	Name     string `json:"name" zpf_name:"name" zpf_reqd:"true"`         //	部门名称
	Sort     int    `json:"sort" zpf_name:"sort"`                         //	排序
	Status   int    `json:"status" zpf_name:"status"`                     //	状态 取值范围及含义: 1 - 启用; 0 - 停用;
}

// 获取部门表单数据请求参数
type V1DeptFormReq struct {
	Id int64 `json:"id" zpf_name:"id" zpf_reqd:"true"` //	部门id
}

// 获取部门表单数据返回参数
type V1DeptFormRsp struct {
	Id       int64  `json:"id" zpf_name:"id" zpf_reqd:"true"`             //	部门id
	ParentId int64  `json:"parentId" zpf_name:"parentId" zpf_reqd:"true"` //	父部门id
	Name     string `json:"name" zpf_name:"name" zpf_reqd:"true"`         //	部门名称
	Sort     int    `json:"sort" zpf_name:"sort"`                         //	排序
	Status   int    `json:"status" zpf_name:"status"`                     //	状态 取值范围及含义: 1 - 启用; 0 - 停用;
}

// 删除部门请求参数
type V1DeptDeleteReq struct {
	Ids string `json:"ids" zpf_name:"ids" zpf_reqd:"true"` //	部门ID，多个以英文逗号(,)分割
}

type V1DictPageReq struct {
	Keywords string `json:"keywords" zpf_name:"keywords"` //	关键字(类型名称/类型编码)
	TypeCode string `json:"typeCode" zpf_name:"typeCode"` //	字典类型编码
	PageNum  int    `json:"pageNum" zpf_name:"pageNum"`   //	页码
	PageSize int    `json:"pageSize" zpf_name:"pageSize"` //	每页记录数
}

type V1DictItem struct {
	Id     int64  `json:"id" zpf_name:"id"`         //	主键
	Name   string `json:"name" zpf_name:"name"`     //	字典名称
	Value  string `json:"value" zpf_name:"value"`   //	字典值
	Remark string `json:"remark" zpf_name:"remark"` //	备注
	Status int    `json:"status" zpf_name:"status"` //	状态 取值范围及含义: 1 - 启用; 0 - 停用;
}

type V1DictPageRsp struct {
	List  []*V1DictItem `json:"list" zpf_name:"list"`                   //	列表
	Total int64         `json:"total" zpf_name:"total" zpf_reqd:"true"` //	总记录数
}

type V1DictOptionsReq struct {
	TypeCode string `json:"typeCode" zpf_name:"typeCode" zpf_reqd:"true"` //	字典类型编码
}

type V1DictOptionsRsp struct {
	Items []*StringOptions `json:"items" zpf_name:"items"` //	选项列表
}

type V1DictFormReq struct {
	Id int64 `json:"id" zpf_name:"id" zpf_reqd:"true"` //	字典ID
}

type V1DictFormRsp struct {
	Id       int64  `json:"id" zpf_name:"id"`                             //	主键
	TypeCode string `json:"typeCode" zpf_name:"typeCode" zpf_reqd:"true"` //	类型编码
	Name     string `json:"name" zpf_name:"name"`                         //	字典名称
	Value    string `json:"value" zpf_name:"value"`                       //	字典值
	Status   int    `json:"status" zpf_name:"status"`                     //	状态 取值范围及含义: 1 - 启用; 0 - 停用;
	Sort     int    `json:"sort" zpf_name:"sort"`                         //	排序
	Remark   string `json:"remark" zpf_name:"remark"`                     //	备注
}

type V1DictAddReq struct {
	Id       int64  `json:"id" zpf_name:"id"`                             //	主键
	TypeCode string `json:"typeCode" zpf_name:"typeCode" zpf_reqd:"true"` //	类型编码
	Name     string `json:"name" zpf_name:"name"`                         //	字典名称
	Value    string `json:"value" zpf_name:"value"`                       //	字典值
	Status   int    `json:"status" zpf_name:"status"`                     //	状态 取值范围及含义: 1 - 启用; 0 - 停用;
	Sort     int    `json:"sort" zpf_name:"sort"`                         //	排序
	Remark   string `json:"remark" zpf_name:"remark"`                     //	备注
}

type V1DictUpdateReq struct {
	Id       int64  `json:"id" zpf_name:"id" zpf_reqd:"true"` //	主键
	TypeCode string `json:"typeCode" zpf_name:"typeCode"`     //	类型编码
	Name     string `json:"name" zpf_name:"name"`             //	字典名称
	Value    string `json:"value" zpf_name:"value"`           //	字典值
	Status   int    `json:"status" zpf_name:"status"`         //	状态 取值范围及含义: 1 - 启用; 0 - 停用;
	Sort     int    `json:"sort" zpf_name:"sort"`             //	排序
	Remark   string `json:"remark" zpf_name:"remark"`         //	备注
}

type V1DictDeleteReq struct {
	Ids string `json:"ids" zpf_name:"ids" zpf_reqd:"true"` //	字典ID，多个以英文逗号(,)拼接
}

type V1DictTypesPageReq struct {
	Keywords string `json:"keywords" zpf_name:"keywords"` //	关键字(类型名称/类型编码)
	PageNum  int    `json:"pageNum" zpf_name:"pageNum"`   //	页码
	PageSize int    `json:"pageSize" zpf_name:"pageSize"` //	每页记录数
}

type V1DictTypesPageRsp struct {
	List  []*V1DictTypesItem `json:"list" zpf_name:"list"`                   //	列表
	Total int64              `json:"total" zpf_name:"total" zpf_reqd:"true"` //	总记录数
}

type V1DictTypesFormReq struct {
	Id int64 `json:"id" zpf_name:"id" zpf_reqd:"true"` //	主键
}

type V1DictTypesFormRsp struct {
	Id     int64  `json:"id" zpf_name:"id"`         //	主键
	Name   string `json:"name" zpf_name:"name"`     //	类型名称
	Code   string `json:"code" zpf_name:"code"`     //	类型编码
	Status int    `json:"status" zpf_name:"status"` //	状态 取值范围及含义: 1 - 启用; 0 - 停用;
	Remark string `json:"remark" zpf_name:"remark"` //	备注
}

type V1DictTypesAddReq struct {
	Id     int64  `json:"id" zpf_name:"id"`                     //	主键
	Name   string `json:"name" zpf_name:"name"`                 //	类型名称
	Code   string `json:"code" zpf_name:"code" zpf_reqd:"true"` //	类型编码-必填
	Status int    `json:"status" zpf_name:"status"`             //	状态 取值范围及含义: 1 - 启用; 0 - 停用;
	Remark string `json:"remark" zpf_name:"remark"`             //	备注
}

type V1DictTypesUpdateReq struct {
	Id     int64  `json:"id" zpf_name:"id" zpf_reqd:"true"`     //	主键
	Name   string `json:"name" zpf_name:"name"`                 //	类型名称
	Code   string `json:"code" zpf_name:"code" zpf_reqd:"true"` //	类型编码
	Status int    `json:"status" zpf_name:"status"`             //	状态 取值范围及含义: 1 - 启用; 0 - 停用;
	Remark string `json:"remark" zpf_name:"remark"`             //	备注
}

type V1DictTypesDeleteReq struct {
	Ids string `json:"ids" zpf_name:"ids" zpf_reqd:"true"` //	字典类型ID，多个以英文逗号(,)分割
}

// 文件结构信息
type V1FileItem struct {
	Id         int64  `json:"id" zpf_name:"id" zpf_reqd:"true"`     //	文件ID
	Name       string `json:"name" zpf_name:"name" zpf_reqd:"true"` //	文件名
	Url        string `json:"url" zpf_name:"url" zpf_reqd:"true"`   //	文件URL
	Key        string `json:"key" zpf_name:"key"`                   //	文件key
	Vendor     string `json:"vendor" zpf_name:"vendor"`             //	菜单类型 取值范围及含义: local - 本机存储; qiniu - 七牛存储; aliyun - 阿里云存储; tencent - 腾讯云存储;
	CreateTime string `json:"createTime" zpf_name:"createTime"`     //	创建时间
	Deleted    bool   `json:"deleted" zpf_name:"deleted"`           //	是否删除
	VendorName string `json:"vendorName" zpf_name:"vendorName"`     //	文件存储提供商
}

// 文件上传请求
type V1FilesUploadRsp struct {
	Name string `json:"name" zpf_name:"name"` //	文件名
	Url  string `json:"url" zpf_name:"url"`   //	文件URL
}

// 文件删除请求
type V1FilesDeleteReq struct {
	FilePath string `json:"filePath" zpf_name:"filePath" zpf_reqd:"true"` //	文件路径
}

type V1FileFetchReq struct {
	Url string `json:"url" zpf_name:"url" zpf_reqd:"true"` //	文件URL
}

// 文件分页请求
type V1FilePageReq struct {
	PageNum  int    `json:"pageNum" zpf_name:"pageNum" zpf_reqd:"true"`   //	页码
	PageSize int    `json:"pageSize" zpf_name:"pageSize" zpf_reqd:"true"` //	每页数量
	Vendor   string `json:"vendor" zpf_name:"vendor"`                     //	文件存储提供商
	Name     string `json:"name" zpf_name:"name"`                         //	文件名
}

type V1FilePageRsp struct {
	Items []*V1FileItem `json:"items" zpf_name:"items"`                 //	文件列表
	Total int64         `json:"total" zpf_name:"total" zpf_reqd:"true"` //	总数
}

// 文件修改弹窗请求参数
type V1FileFormReq struct {
	Id int64 `json:"id" zpf_name:"id" zpf_reqd:"true"` //	文件 ID
}

// 文件弹窗信息返回
type V1FileFromRsp struct {
	Id         int64  `json:"id" zpf_name:"id" zpf_reqd:"true"`                 //	文件ID
	Name       string `json:"name" zpf_name:"name" zpf_reqd:"true"`             //	文件名
	Url        string `json:"url" zpf_name:"url" zpf_reqd:"true"`               //	文件URL
	Key        string `json:"key" zpf_name:"key"`                               //	文件key
	Vendor     string `json:"vendor" zpf_name:"vendor"`                         //	菜单类型 取值范围及含义: local - 本机存储; qiniu - 七牛存储; aliyun - 阿里云存储; tencent - 腾讯云存储;
	Deleted    bool   `json:"deleted" zpf_name:"deleted"`                       //	是否删除
	VendorName string `json:"vendorName" zpf_name:"vendorName"`                 //	文件存储提供商
	CreateTime string `json:"createTime" zpf_name:"createTime" zpf_reqd:"true"` //	创建时间
}

type V1FileUpdateReq struct {
	Id   int64  `json:"id" zpf_name:"id" zpf_reqd:"true"`     //	文件ID
	Name string `json:"name" zpf_name:"name" zpf_reqd:"true"` //	文件名
}

type V1VendorItem struct {
	Id         int64  `json:"id" zpf_name:"id"`                 //	主键
	Vendor     string `json:"vendor" zpf_name:"vendor"`         //	文件存储提供商
	Name       string `json:"name" zpf_name:"name"`             //	配置名
	Key        string `json:"key" zpf_name:"key"`               //	配置键
	Value      string `json:"value" zpf_name:"value"`           //	配置值
	Remark     string `json:"remark" zpf_name:"remark"`         //	备注
	UpdateTime string `json:"updateTime" zpf_name:"updateTime"` //	更新时间
}

// 获取文件存储区域返回
type V1FilesZoneRsp struct {
	Qiniu []*StringOptionItem `json:"qiniu" zpf_name:"qiniu"` //	文件存储提供商列表
}

// 获取文件存储提供商列表返回
type V1FilesVendorsRsp struct {
	Items   []*StringOptions `json:"items" zpf_name:"items"`                     //	文件存储提供商列表
	Current *V1VendorItem    `json:"current" zpf_name:"current" zpf_reqd:"true"` //	当前文件存储提供商
}

type V1VendorPageReq struct {
	Vendor   string `json:"vendor" zpf_name:"vendor"`     //	文件存储提供商
	PageNum  int    `json:"pageNum" zpf_name:"pageNum"`   //	页码
	PageSize int    `json:"pageSize" zpf_name:"pageSize"` //	每页记录数
}

type V1VendorPageRsp struct {
	Items []*V1VendorItem `json:"items" zpf_name:"items"`                 //	列表
	Total int64           `json:"total" zpf_name:"total" zpf_reqd:"true"` //	总记录数
}

type V1VendorFormReq struct {
	Id int64 `json:"id" zpf_name:"id" zpf_reqd:"true"` //	配置 id
}

type V1VendorFormRsp struct {
	Item    *V1VendorItem       `json:"item" zpf_name:"item" zpf_reqd:"true"` //	配置项
	Options []*StringOptionItem `json:"options" zpf_name:"options"`           //	文件存储提供商列表
}

type V1VendorUpdateReq struct {
	Id     int64  `json:"id" zpf_name:"id" zpf_reqd:"true"`         //	主键
	Vendor string `json:"vendor" zpf_name:"vendor" zpf_reqd:"true"` //	文件存储提供商
	Name   string `json:"name" zpf_name:"name" zpf_reqd:"true"`     //	配置名
	Key    string `json:"key" zpf_name:"key" zpf_reqd:"true"`       //	配置键
	Value  string `json:"value" zpf_name:"value" zpf_reqd:"true"`   //	配置值
	Remark string `json:"remark" zpf_name:"remark"`                 //	备注
}

type V1ApiItem struct {
	Id         int64    `json:"id" zpf_name:"id"`                         //	主键
	Method     string   `json:"method" zpf_name:"method" zpf_reqd:"true"` //	请求方法
	Name       string   `json:"name" zpf_name:"name" zpf_reqd:"true"`     //	API名称
	Path       string   `json:"path" zpf_name:"path" zpf_reqd:"true"`     //	API路径
	Menus      []string `json:"menus" zpf_name:"menus"`                   //	API 菜单列表
	Remark     string   `json:"remark" zpf_name:"remark"`                 //	备注
	UpdateTime string   `json:"updateTime" zpf_name:"updateTime"`         //	更新时间
}

type V1ApiPageReq struct {
	Keyword  string `json:"keyword" zpf_name:"keyword"`   //	路径名称搜索
	PageNum  int    `json:"pageNum" zpf_name:"pageNum"`   //	页码
	PageSize int    `json:"pageSize" zpf_name:"pageSize"` //	每页记录数
}

// 分页获取API列表
type V1ApiPageRsp struct {
	Items  []*V1ApiItem `json:"items" zpf_name:"items"`                   //	列表
	Button int          `json:"button" zpf_name:"button" zpf_reqd:"true"` //	按钮类型
	Total  int64        `json:"total" zpf_name:"total" zpf_reqd:"true"`   //	总记录数
}

type V1ApiFormReq struct {
	Id int64 `json:"id" zpf_name:"id" zpf_reqd:"true"` //	配置 id
}

type V1ApiFormRsp struct {
	Id      int64         `json:"id" zpf_name:"id" zpf_reqd:"true"`         //	主键
	Method  string        `json:"method" zpf_name:"method" zpf_reqd:"true"` //	请求方法
	Name    string        `json:"name" zpf_name:"name" zpf_reqd:"true"`     //	API名称
	Path    string        `json:"path" zpf_name:"path" zpf_reqd:"true"`     //	API路径
	Menus   []*V1MenuTiny `json:"menus" zpf_name:"menus"`                   //	API 菜单列表
	Remark  string        `json:"remark" zpf_name:"remark" zpf_reqd:"true"` //	备注
	Methods []string      `json:"methods" zpf_name:"methods"`               //	方法列表
}

type V1ApiUpdateReq struct {
	Id     int64   `json:"id" zpf_name:"id" zpf_reqd:"true"`         //	主键
	Method string  `json:"method" zpf_name:"method" zpf_reqd:"true"` //	方法名
	Name   string  `json:"name" zpf_name:"name" zpf_reqd:"true"`     //	API名称
	Path   string  `json:"path" zpf_name:"path" zpf_reqd:"true"`     //	API路径
	Menus  []int64 `json:"menus" zpf_name:"menus"`                   //	权限菜单按钮ID列表
	Remark string  `json:"remark" zpf_name:"remark"`                 //	备注
}
