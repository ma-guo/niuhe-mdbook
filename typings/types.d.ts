
// Generated by niuhe.idl, search "niuhe" plugin for vscode
// 重新生成时本文件将被复写, 请不要手动修改. 配置 "tstypes" 可指定新路径

declare namespace Demo {

	// gen enum const

	/**
	* 错误类型
	*
	* 成员包括 NOT_FOUND(404)
	*/
	enum Errors {
		/** 查找的数据不存在 */
		NOT_FOUND = 404,
	}

	/**
	* 语言枚举类
	*
	* 成员包括 ZH("zh"), EN("en")
	*/
	enum Language {
		/** 中文 */
		ZH = "zh",
		/** 英文 */
		EN = "en",
	}

	/**
	* 语言类型枚举
	*
	* 成员包括 ZH_CN(1), ZH_TW(2)
	*/
	enum LanguageType {
		/** 简体中文 */
		ZH_CN = 1,
		/** 繁体中文 */
		ZH_TW = 2,
	}

	// gen model api


	/**
	 * 分页查询Config信息
	 *
	 * 成员包括 page, size, name, value
	 */
	interface ConfigPageReq {
		/** 页码 */
		page: number;
		/** 每页数量 */
		size: number;
		/** 配置名称 */
		name: string;
		/** 配置值 */
		value: number;
	}

	/**
	 * 系统配置表
	 *
	 * 成员包括 id, name, value, create_at, update_at
	 */
	interface ConfigItem {
		/** id */
		id: number;
		/** 配置名称 */
		name: string;
		/** 配置值 */
		value: number;
		/** 创建时间 */
		create_at: string;
		/** 更新时间 */
		update_at: string;
	}

	/**
	 * 分页查询Config信息
	 *
	 * 成员包括 total, items
	 */
	interface ConfigPageRsp {
		/** 总数 */
		total: number;
		/** Config信息 */
		items: ConfigItem[];
	}

	/**
	 * 请求Config信息
	 *
	 * 成员包括 id
	 */
	interface ConfigFormReq {
		id: number;
	}

	/**
	 * 批量删除Config信息
	 *
	 * 成员包括 ids
	 */
	interface ConfigDeleteReq {
		/** 记录id列表 */
		ids: number[];
	}

	/** Config无数据返回 */
	interface ConfigNoneRsp { }


	/**
	 * 测试请求
	 *
	 * 成员包括 name
	 */
	interface HelloReq {
		/** 用户名 */
		name: string;
	}

	/**
	 * 测试响应
	 *
	 * 成员包括 greeting
	 */
	interface HelloRsp {
		/** 问候语 */
		greeting: string;
	}

	/** 空请求 */
	interface NoneReq { }


	/** 空响应 */
	interface NoneRsp { }


	/**
	 * RPC测试用例请求参数
	 *
	 * 成员包括 name, password
	 */
	interface XxxYyyReqMsg {
		/** 用户名 */
		name: string;
		/** 密码 */
		password: string;
	}

	/**
	 * RPC测试用例返回参数
	 *
	 * 成员包括 open_id, account_info
	 */
	interface XxxYyyRspMsg {
		/** 用户open_id */
		open_id: string;
		/** 账户信息 */
		account_info: string;
	}

	/**
	 * 测试 validator请求参数
	 *
	 * 成员包括 name, age, var
	 */
	interface HellowValidatorReqMsg {
		/** 名字 长度:4-10 */
		name: string;
		/** 年龄 数值范围:10-20 */
		age: number;
		/** 变量 正则表达式:[A-Za-z][a-zA-Z0-9_]* */
		var: string;
	}

	/**
	 * 测试 validator返回参数
	 *
	 * 成员包括 text
	 */
	interface HellowValidatorRspMsg {
		/** 消息 */
		text: string;
	}

}